@page "/DME21updated"
@inject IJSRuntime JsRuntime

<div id="main">
    <RadzenCard Style="padding-left:40px; margin-bottom:30px;">
        <div class="wizard-heading">DME 21</div>

        <div class="row">
            <div class="col-6">
                <div class="row">
                    <div class="col-2">
                        <RadzenLabel Text="Year :" />
                    </div>
                    <div class="col-7">
                        <RadzenLabel Text="@selectedYear" />
                    </div>
                </div>
                <br />
            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col-2">
                        <RadzenLabel Text="Month :" />
                    </div>
                    <div class="col-7">
                        <RadzenLabel Text="@monthName" />
                    </div>
                </div>
                <br />
            </div>
        </div>
        <div>
            <RadzenDataGrid AllowFiltering="true" AllowColumnResize="true" FilterMode="FilterMode.Advanced" AllowSorting="true" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true"
                            Data="TaskAllocationList" TItem="TaskAllocation" ColumnWidth="300px" LogicalFilterOperator="LogicalFilterOperator.Or">
                <Columns>
                    <RadzenDataGridColumn TItem="TaskAllocation" Property="TaskYearMonth" Filterable="true" Title="Date" Width="80px" TextAlign="TextAlign.Center" />
                    <RadzenDataGridColumn TItem="TaskAllocation" Title="Work Type" Filterable="false" Width="160px" TextAlign="TextAlign.Center">
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="TaskAllocation" Title="Perform Duty" Filterable="false" Width="160px" TextAlign="TextAlign.Center">
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="TaskAllocation" Title="Work Attended Place" Filterable="false" Width="160px" TextAlign="TextAlign.Center">
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        </div>
    </RadzenCard>
</div>

@code {

    string[] year = { "2021", "2022", "2023" };
    private string selectedYear = DateTime.Now.AddMonths(1).ToString("yyyy");
    List<Month> monthTable = new List<Month>();
    private int month = DateTime.Now.AddMonths(1).Day;
    List<TaskAllocation> TaskAllocationList = new List<TaskAllocation>();
    private string monthName = DateTime.Now.AddMonths(1).ToString("MMMM");
    List<TaskType> taskTypes = new List<TaskType>();

    protected override async void OnInitialized()
    {
        base.OnInitialized();

        monthTable.Add(new Month() { monthName = "January", monthNumber = 1 });
        monthTable.Add(new Month() { monthName = "February", monthNumber = 2 });
        monthTable.Add(new Month() { monthName = "March", monthNumber = 3 });
        monthTable.Add(new Month() { monthName = "April", monthNumber = 4 });
        monthTable.Add(new Month() { monthName = "May", monthNumber = 5 });
        monthTable.Add(new Month() { monthName = "June", monthNumber = 6 });
        monthTable.Add(new Month() { monthName = "July", monthNumber = 7 });
        monthTable.Add(new Month() { monthName = "August", monthNumber = 8 });
        monthTable.Add(new Month() { monthName = "September", monthNumber = 9 });
        monthTable.Add(new Month() { monthName = "October", monthNumber = 10 });
        monthTable.Add(new Month() { monthName = "November", monthNumber = 11 });
        monthTable.Add(new Month() { monthName = "December", monthNumber = 12 });

        for (int i = 0; i < new DateTime(Convert.ToInt32(selectedYear), month, 01).AddMonths(1).AddDays(-1).Day; i++)
        {
            TaskAllocationList.Add(new TaskAllocation() { TaskYearMonth = new DateTime(Convert.ToInt32(selectedYear), month, 01).AddDays(i).Date });
        }

        TaskTypeController taskTypeController = ControllerFactory.CreateTaskTypeController();
        taskTypes = taskTypeController.GetAllTaskType(false);

    }
}
